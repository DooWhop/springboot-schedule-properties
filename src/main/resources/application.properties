server.port:8083

schedule.threadpool.size:5

#须按照resttask+i(1-n顺序,不能跳过)配置   

##test
#resttask1.cron:0/5 * * * * ?
#resttask1.method:get
#resttask1.url:http://localhost:8082/demo/

##每20分钟(0:00,0:20...)
resttask1.cron:0 0/20 * * * ?
resttask1.method:post
resttask1.url:http://localhost:8082/notifyService/dealChargeDeduct/

##每2小时(1:00,3:00...)
resttask2.cron:0 0 1/2 * * ?
resttask2.method:get
resttask2.url:http://10.56.202.24:8082/reportscanService/scan/

#放款通知状态查询服务
#每20分钟
resttask3.cron:0 0/20 * * * ?
resttask3.method:get
resttask3.url:http://host:port/unknowService/loanQuery/

#授信失效。
#每天11点钟
resttask4.cron:0 0 11 1/1 * ?  
resttask4.method:get
resttask4.url:http://host:port/creditService/nullify/

######对账######

#任务生成
#每天 7点02 开始执行 15点结束 每隔半小时执行一次
resttask5.cron:0 2/30 7-14 * * ?
resttask5.method:get
resttask5.url:http://localhost:8085/reconService/create/

#数据加载
#每天 7点17 开始执行 16点结束 每隔半小时执行一次
resttask6.cron:0 17/30 7-15 * * ?
resttask6.method:get
resttask6.url:http://localhost:8085/reconService/load/

#对账任务执行
#每天 7点37 开始执行 16点结束 每隔1小时执行一次
resttask7.cron:0 37/59 7-15 * * ?
resttask7.method:get
resttask7.url:http://localhost:8085/reconService/execute/

#批量扣款
#每天 14:00 执行一次
resttask8.cron:0 0 14 * * ?
resttask8.method:post
resttask8.url:http://localhost:8085/batchDeductService/batchDeduct/

#扣款结果查询
#每天 14:31 开始执行  21点结束 每隔半小时执行一次:分两个服务
#(1)每天14:31开始执行到21点结束,每1小时执行一次
#(2)每天15:01开始执行到21点结束,每1小时执行一次
resttask9.cron:0 31 14-20 * * ?
resttask9.method:get
resttask9.url:http://localhost:8085/repaymentResultService/batchPolling/

resttask10.cron:0 1 15-20 * * ?
resttask10.method:get
resttask10.url:http://localhost:8085/repaymentResultService/batchPolling/

#扣款结果上传
#每天 21：30 执行一次
resttask11.cron:0 30 21 * * ?
resttask11.method:get
resttask11.url:http://localhost:8085/repayService/reportResult/










